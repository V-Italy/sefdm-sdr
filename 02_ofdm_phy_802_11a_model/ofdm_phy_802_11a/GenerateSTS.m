function [ STS, oneSTS ] = GenerateSTS(mode)
%
% Генерирует часть преамбулы (short symbols) во временной области
% согласно стандарту 802.11a
%
% См. "IEEE Std 802.11-2012", стр. 1592, 2538
% См. "IEEE Std 802.11-2016", стр. 2289, 3314
%
% in:
%   @mode - 'Tx' или 'Rx'
%
%
% Если режим 'Tx', то данная функция генерирует 161 комлпексных отсчётов
% (именно так указано в стандарте), а НЕ 160 комплексных отсчётов.
% Также ПРИСУТСТВУЕТ умножение на оконную функцию, которая в цифровом виде имеет вид:
%
%        | 0.5   k = 0
% w[k] = | 1     1 <= k <= 159
%        | 0.5   k = 160
%
% // Последний отсчёт (k=160) перекрывается (суммируется) с первым отсчётом (k=0)
% // следующего OFDM-символа
%
%
% Если режим 'Rx', то данная функция генерирует 160 комлпексных отсчётов без умножения
% на оконную функцию, т.е. на выходе получаем 10 одинаковых Short Symbol по 16 комплексных
% отсчётов каждый (используем на приёмной стороне во время корреляции)

        % S_-26_26
        S = sqrt(13/6) * [0, 0, 1+1i, ...
                0, 0, 0, -1-1i, ...
                0, 0, 0,  1+1i, ...
                0, 0, 0, -1-1i, ...
                0, 0, 0, -1-1i, ...
                0, 0, 0,  1+1i, ...
                0, 0, 0, 0, 0, 0, 0, -1-1i, ...
                0, 0, 0, -1-1i, ...
                0, 0, 0,  1+1i, ...
                0, 0, 0,  1+1i, ...
                0, 0, 0,  1+1i, ...
                0, 0, 0,  1+1i, ...
                0, 0];
        
        % Нормальный порядок + Nulls для IFFT блока
        S = [0, ...
             S(28 : 53), ...
             zeros(1, 11), ...
             S(1 : 26)];
     
        STS = ifft(S);

	if strcmp(mode, 'Tx')

		% Периодически расширяем, чтобы получить 161 отсчёт
		STS = [STS, STS, STS(1 : 33)];

		% Умножаем на оконную функцию
		STS(1)   = 0.5 * STS(1);
		STS(161) = 0.5 * STS(161);

	else % strcmp(mode, 'Rx')

		% Периодически расширяем, чтобы получить 160 отсчёт
		STS = [STS, STS, STS(1 : 32)];
		
	end

	% Один short training symbol (16 отсчётов) // без учёта окна!
	oneSTS = STS(17 : 32);
        
end

