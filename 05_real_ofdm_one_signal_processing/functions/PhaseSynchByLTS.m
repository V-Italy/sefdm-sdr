function [ estPO ] = PhaseSynchByLTS( rxBPSKLTS )
%
% Оценка фазового смещение по двум LTS: exp(1i*fi)
%
% ВЫПОЛНЯЕМ ПОСЛЕ ЭКВАЛАЙЗЕРА
%
% Находим PO для компенсации остаточного частотное смещения для двух LTS (своё для каждого OFDM-символа)!
%
% @rxBPSKLTS - ОДИН LTS в частотной области!
%
% Для компенсации необходимо умножить на exp(-1i * estPO) !!!
	
% 	path(path, '../../02_ofdm_phy_802_11a_model/ofdm_phy_802_11a/');

	% L_-26_26
	etalonBPSKLTS = [ 1,  1, -1, -1,  1,  1, -1,  1, -1,  1, ...
	                  1,  1,  1,  1,  1, -1, -1,  1,  1, -1, ...
	                  1, -1,  1,  1,  1,  1, ...
	                  0, ...
	                  1, -1, -1,  1,  1, -1, ...
	                  1, -1,  1, -1, -1, -1, -1, -1,  1,  1, ...
	                 -1, -1,  1, -1,  1, -1,  1,  1,  1,  1 ];

	etalonBPSKLTS = [etalonBPSKLTS(28 : 53), etalonBPSKLTS(1 : 26)]; % нормальный порядок

	estPO = angle( rxBPSKLTS * etalonBPSKLTS' );

end

